[{"title":"p2pbin","description":"A simple Node app built on Express, instantly up and running.","url":"https://p2pbin.glitch.me","readme":"# P2Pbin\n***\n```\n  _____ ___  _____  ____ _____ _   _ \n__/\\\\\\\\\\\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\_____/\\\\\\_        \n _\\/\\\\\\/////////\\\\\\__/\\\\\\///////\\\\\\___\\/\\\\\\/////////\\\\\\_\\/\\\\\\/////////\\\\\\_\\/////\\\\\\///__\\/\\\\\\\\\\\\___\\/\\\\\\_       \n  _\\/\\\\\\_______\\/\\\\\\_\\///______\\//\\\\\\__\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\/\\\\\\__\\/\\\\\\_      \n   _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/____________/\\\\\\/___\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\______\\/\\\\\\_____\\/\\\\\\//\\\\\\_\\/\\\\\\_     \n    _\\/\\\\\\/////////___________/\\\\\\//_____\\/\\\\\\/////////____\\/\\\\\\/////////\\\\\\_____\\/\\\\\\_____\\/\\\\\\\\//\\\\\\\\/\\\\\\_    \n     _\\/\\\\\\_________________/\\\\\\//________\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\_\\//\\\\\\/\\\\\\_   \n      _\\/\\\\\\_______________/\\\\\\/___________\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\__\\//\\\\\\\\\\\\_  \n       _\\/\\\\\\______________/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\_____________\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/___/\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\___\\//\\\\\\\\\\_ \n        _\\///______________\\///////////////__\\///______________\\/////////////____\\///////////__\\///_____\\/////__\n\n\n```\nA pastebin based on IPFS. It is a 100% static website running on JavaScript and HTML.\n\nBasically:\n1. You create a paste\n2. You get the hash\n3. You pin it. The save modal give you instructions on how to pin it.\n\nTo be added: \n- A simple button to pin directly to [Pinata](https://pinata.cloud) with it's API.\n\nNotes: \n- You kind of need to know IPFS to use this lol. https://ipfs.io/\n- I had to change the name because there is also another IPFSbin.\n\n\nFeatures:\n- It requires no server storage.\n \nThanks:\n- @youngchief_btw for the HTTP to HTTPS redirect\n- @khalby786 for the PWA\n\n\n### How To selfhost:\n1. Download the latest version: [https://github.com/owner/repository/releases/latest/download/](https://github.com/owner/repository/releases/latest/download/)\n2. Unzip it.\n3. Then, add it using this command.\n```\nipfs add -r p2pbin/\n```\nProject URL: [https://p2pbin.glitch.me/](https://p2pbin.glitch.me/)\nGitHub: [https://github.com/aboutDavid/p2pbin](https://github.com/aboutDavid/p2pbin)\n\nP2Pbin by aboutDavid is licensed under CC BY-SA 4.0. To view a copy of this license, visit https://creativecommons.org/licenses/by-sa/4.0"},{"title":"honeypot","description":"A simple Node app built on Express, instantly up and running.","url":"https://honeypot.glitch.me","readme":"# üçØ honeypot\n***\n\n### What is a honeypot:\n> In computer terminology, a honeypot is a computer security mechanism set to detect, deflect, or, in some manner, counteract attempts at unauthorized use of information systems. Generally, a honeypot consists of data (for example, in a network site) that appears to be a legitimate part of the site that seems to contain information or a resource of value to attackers, but actually, is isolated and monitored and enables blocking or analyzing the attackers. This is similar to police sting operations, colloquially known as \"baiting\" a suspect.\n\n\\- Wikipedia\n\n### Why set up a honeypot:\nMany bad bots will try to attack/DDoS your site. Those same bots will also go to other sites. So, with this honeypot, you can help other people by warning them.\n\n### How to set it up:\n1. Remix the project [here.](https://glitch.com/edit/#!/remix/honeypot),\n2. Get a [AbuseIPDB](https://www.abuseipdb.com/account/api) API key here.\n3. Place the AbuseIPDB key in the .env file under `ABUSEIPDB_API_KEY`. It looks like this: `ABUSEIPDB_API_KEY=<PLACE API KEY HERE>`\n\n### How to add more traps:\nAll traps are stored in `routes.js`. A normal entry looks something like:\n```jsx\n\"/path/to/trap\": [\"15,19\",\"A normal description.\"]\n```\nIf you visit PROJECT_NAME.glitch.me/path/to/trap, then you would be reported for \"A normal description.\" with the tags 'Hacking' and 'Bad web bot'\nThis explains more:\n```jsx\n\"/trap\": [\"category,category\", \"Description\"]\n```\n- \"/trap\": The path to the trap (website.com/trap)\n- \"category,category\": are the nubers assoicated with categories of attacks. Can be found [here](https://www.abuseipdb.com/categories)\n- \"Description\": The description of the attack"},{"title":"hello-markdown","description":"Server-side markdown renderer, using hello-webpage","url":"https://hello-markdown.glitch.me","readme":"# hello-markdown\n\nServer-side markdown renderer, using hello-webpage\n\n### ü§∑‚Äç‚ôÇÔ∏è How does it work?\n\nhello-webpage templates use something called lws (local web server) to serve static files (e.g. stylesheets, html files, javascript files, images, basically anything that does not need to be rendered by a server).\nlws also allows you to configure the webserver (like setting up a username/password, setting up logs, etc) using a javascript file. The way you can config lws to fit your needs.\nYou can also \"trick\" lws into running code that is not configuration (like rendering markdown, getting posts from GhostCMS, etc)\n\n### ‚öô How does it render markdown/save it?\n\n[markdown-it](https://github.com/markdown-it/markdown-it) renders the markdown and [fs (file system)](https://nodejs.org/api/fs.html) saves it.\n\n### üé® What stylesheet does this use?\n\n[github-markdown-css](https://github.com/sindresorhus/github-markdown-css)\n\n### ‚è±Ô∏è Can I use this to keep my app on 24/7?\n\nNo. As wh0 pointed out, Glitch will initially use lws to serve the files, then move it to S3 (apparently) which is why some static sites go to sleep.\n\n### üíª How do I get started?\n\n1. [Remix this project](https://glitch.com/edit/#!/remix/hello-markdown)\n2. Make some pages (markdown is obviously supported, they must end with .md). If you make a page called `contact.md`, the path would be `/contact`.\n3. Run `refresh`. You have to run `refresh` to refresh lws because since hello-webpage is a static site, Glitch does monitor/reload lws.\n\n### üë©‚Äçüé® How do I customize the layout?\n\nThe layout is stored in `layout.html`. The main content can be access by using the keyword: `{{ content }}` (sort of like nunjucks)\n\n### üëÄ Examples\n\n- [This website](#)\n\n- [Markdown Cheetsheet](/example)\n\n### üíé **NEW!** Blogging feature.\nPlace your posts in the `posts` folder with the following format:\n```text\n[YYYY]-[MM]-[DD]-[TITLE].md\n```\nYour post archive can be found at `/posts`. [Example of the posts archive.](https://hello-markdown.glitch.me/posts)"},{"title":"awesomenotebook","description":"A simple Node app built on Express, instantly up and running.","url":"https://awesomenotebook.glitch.me","readme":"# hello-express\n\nA server that serves a webpage, its resources, and some data\n\n\n## Your Project\n\nOn the front-end,\n\n- Edit `views/index.html` to change the content of the webpage\n- `public/client.js` is the javacript that runs when you load the webpage\n- `public/style.css` is the styles for `views/index.html`\n- Drag in `assets`, like images or music, to add them to your project\n\nOn the back-end,\n\n- your app starts at `server.js`\n- add frameworks and packages in `package.json`\n- safely store app secrets in `.env` (nobody can see this but you and people you invite)\n\nClick `Show` in the header to see your app live. Updates to your code will instantly deploy.\n\n\n## Made by [Glitch](https://glitch.com/)\n\n**Glitch** is the friendly community where you'll build the app of your dreams. Glitch lets you instantly create, remix, edit, and host an app, bot or site, and you can invite collaborators or helpers to simultaneously edit code with you.\n\nFind out more [about Glitch](https://glitch.com/about).\n\n( ·µî ·¥• ·µî )"}]