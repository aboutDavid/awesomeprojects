[{"title":"ghost","description":"Create your own Ghost 3 blog by remixing this project","url":"https://ghost.glitch.me","readme":"  <a href=\"https://ghost.org\">\n    <img src=\"https://user-images.githubusercontent.com/120485/43974508-b64b2fe8-9cd2-11e8-8e58-707254b8817c.png\" width=\"140px\" alt=\"Ghost\" />\n  </a>\n\n<a href=\"https://ghost.org\">Ghost.org</a> |\n    <a href=\"https://ghost.org/features\">Features</a> |\n    <a href=\"https://ghost.org/customers\">Showcase</a> |\n    <a href=\"https://forum.ghost.org\">Forum</a> |\n    <a href=\"https://ghost.org/docs/\">Documentation</a> |\n    <a href=\"https://github.com/TryGhost/Ghost/blob/master/.github/CONTRIBUTING.md\">Contributing</a> |\n    <a href=\"https://twitter.com/ghost\">Twitter</a>\n    <br /><br />\n    <a href=\"https://ghost.org\">\n        <img src=\"https://img.shields.io/badge/downloads-2M-brightgreen.svg\" alt=\"Downloads\" />\n    </a>\n    <a href=\"https://github.com/TryGhost/Ghost/releases/\">\n        <img src=\"https://img.shields.io/github/release/TryGhost/Ghost.svg\" alt=\"Latest release\" />\n    </a>\n    <a href=\"https://travis-ci.org/TryGhost/Ghost\">\n        <img src=\"https://travis-ci.org/TryGhost/Ghost.svg?branch=master\" alt=\"Build status\" />\n    </a>\n    <a href=\"https://github.com/TryGhost/Ghost/contributors/\">\n        <img src=\"https://img.shields.io/github/contributors/TryGhost/Ghost.svg\" alt=\"Contributors\" />\n    </a>\n    <a href=\"https://opencollective.com/ghost\">\n        <img src=\"https://opencollective.com/ghost/backers/badge.svg\" alt=\"OpenCollective\" />\n    </a>\n\n&nbsp;\n\n<a href=\"https://ghost.org\"><img src=\"https://user-images.githubusercontent.com/120485/66918181-f88fdc80-f048-11e9-8135-d9c0e7b35ebc.png\" alt=\"Fiercely independent, professional publishing. Ghost is the most popular open source, headless Node.js CMS which already works with all the tools you know and love.\" /></a>\n\n<a href=\"https://ghost.org/pricing\"><img src=\"https://user-images.githubusercontent.com/120485/43995179-556d7620-9da1-11e8-8410-4b2ba48ea8d0.png\" alt=\"Ghost(Pro)\" width=\"165px\" /></a>\n\nThe easiest way to deploy Ghost is with our official **[Ghost(Pro)](https://ghost.org/pricing/)** managed service. You can have a fresh instance up and running in a couple of clicks with a worldwide CDN, backups, security and maintenance all done for you.\n\nNot only will it save you hours of maintenance per month, but all revenue goes to the Ghost Foundation, which funds the maintenance and further development of Ghost itself. So you’ll be supporting open source software *and* getting a great service! Alternatively if you'd like to support us, we're very grateful to all our backers on [Open Collective](https://opencollective.com/ghost) :heart:\n\n&nbsp;\n\n# Quickstart Install\n\nIf you want to run your own instance of Ghost, in most cases the best way is to use our **CLI tool**\n\n```\n$ npm install ghost-cli -g\n```\n\n&nbsp;\n\nThen, if installing locally add the `local` flag to get up and running in under a minute - [Local install docs](https://ghost.org/docs/install/local/)\n\n```\n$ ghost install local\n```\n\n&nbsp;\n\nor on a server run the full install, including automatic SSL setup using LetsEncrypt - [Production install docs](https://ghost.org/docs/install/ubuntu/)\n\n```\n$ ghost install\n```\n\n&nbsp;\n\nCheck out our [official documentation](https://ghost.org/docs/) for more information about our [recommended hosting stack](https://ghost.org/docs/concepts/hosting/) & properly [upgrading Ghost](https://ghost.org/faq/upgrade-to-ghost-2-0/), plus everything you need to develop your own Ghost [themes](https://ghost.org/docs/api/handlebars-themes/) or work with [our API](https://ghost.org/docs/api/).\n\n&nbsp;\n\n\n# Getting Help\n\nYou can find answers to a huge variety of questions, along with a large community of helpful developers over on the [Ghost forum](https://forum.ghost.org/) - replies are generally very quick. **Ghost(Pro)** customers also have access to 24/7 email support.\n\nTo stay up to date with all the latest news and product updates, make sure you [subscribe to our blog](https://ghost.org/blog/) — or you can always follow us [on Twitter](https://twitter.com/Ghost), if you prefer your updates bite-sized and facetious. :saxophone::turtle:\n\n&nbsp;\n\n\n# Contributors & Advanced Developers\n\nFor anyone wishing to contribute to Ghost or to hack/customise core files we recommend following our full development setup guides: [General Contributor Guide](https://ghost.org/docs/concepts/contributing/) | [Developer Setup Instructions](https://ghost.org/docs/install/source/) | [Admin Client development guide](https://ghost.org/docs/install/source/#ghost-admin)\n\n&nbsp;\n\n\n# Copyright & License\n\nCopyright (c) 2013-2019 Ghost Foundation - Released under the [MIT license](LICENSE). Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our [trademark policy](https://ghost.org/trademark/) for info on acceptable usage.\n"},{"title":"frill-corn","description":"A express app with a lot more features","url":"https://frill-corn.glitch.me","readme":"Project URL: https://frill-corn.glitch.me\n\nOpenRadio is a system where the admin can create multiple radio stations for users to listen into by inputing youtube urls(defintley going to expand). Everyone listening to hte radio station should be at approximatley the same time as everyone else(last test resulted in 1 to 3 second difference). It comes with a nice admin panel that you can configure the password in. It's also open-source on github(I wouldn't call it openradio if it wasn't) at https://github.com/javaarchive/OpenRadio/tree/glitch\nYou can create a new project from github and configure these values in .env and your OpenRadio instance should be setup. Feel free to delete coding playlist and testing playlist. Make sure to set these values in .env\n![image|515x500](https://aws1.discourse-cdn.com/business6/uploads/glitch/original/2X/2/26e174f9970d1c2934402ddec18e3c629dbbda36.png)\nYou don't need to set `MADE_WITH` but `PASSWORD` is the admin password and `SECRET` is your secret for session cookies. There's also a whole lot more config in `config.js`\nThere are a few annoying bugs and issues which I have described in my latest release: https://github.com/javaarchive/OpenRadio/releases/tag/V2.0.0\n\nThe system is designed to use infinite mp3 streams so you can have your devices stream https://yourglitchurl/stream/(stream name here)\nI use this technique for my google home and my amazon alexa. You can also setup discord bots to stream from it by copying a bit of code from discordjs's documentation.\n\n# Inspiration\n\nI think I got inspiration when Ben or Electric Reality on discord sent a idea for a service that gives you music streams. Using python this wasn't really possible but with nodejs streams and rate-limiting this was made possible!\n\n# Screenshots\n\n![image|690x348](https://aws1.discourse-cdn.com/business6/uploads/glitch/original/2X/c/c5831337dd3a7a12b81c32bbe372651e43608fb6.png)\nControl click play button to show audio element\n![image|690x224](https://aws1.discourse-cdn.com/business6/uploads/glitch/optimized/2X/6/6c03e1a21717cd1355edb3018d9482d60ce550f3_2_690x224.png)\n![image|690x187](https://aws1.discourse-cdn.com/business6/uploads/glitch/optimized/2X/7/751900a40f395403f8cad076ebf8104c7af87332_2_690x187.png)\n![image|690x184](https://aws1.discourse-cdn.com/business6/uploads/glitch/optimized/2X/c/cac1cc48a1a4daa52c0bc2ac85a702ba42c1892f_2_690x184.png)\npretty proud of this screen\n![image|690x401](https://aws1.discourse-cdn.com/business6/uploads/glitch/optimized/2X/4/4db4de2291312f62dad7f085d33fd6fc4c7f2130_2_690x401.png)\n![image|690x248](https://aws1.discourse-cdn.com/business6/uploads/glitch/original/2X/4/42bb910d85c90fec87be2d5d537739d72a773a0d.png)\n\n# Customization\n\nThis is very customizable as all the templates are in one directory I think. There is also a template that \"wraps\" on top of the other templates which includes the topbar.\n"},{"title":"p2pbin","description":"A simple Node app built on Express, instantly up and running.","url":"https://p2pbin.glitch.me","readme":"# P2Pbin\n***\n```\n  _____ ___  _____  ____ _____ _   _ \n__/\\\\\\\\\\\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\\\______/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\\\\\\\\\\\\\\\\\__/\\\\\\\\\\_____/\\\\\\_        \n _\\/\\\\\\/////////\\\\\\__/\\\\\\///////\\\\\\___\\/\\\\\\/////////\\\\\\_\\/\\\\\\/////////\\\\\\_\\/////\\\\\\///__\\/\\\\\\\\\\\\___\\/\\\\\\_       \n  _\\/\\\\\\_______\\/\\\\\\_\\///______\\//\\\\\\__\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\/\\\\\\__\\/\\\\\\_      \n   _\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/____________/\\\\\\/___\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/__\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\______\\/\\\\\\_____\\/\\\\\\//\\\\\\_\\/\\\\\\_     \n    _\\/\\\\\\/////////___________/\\\\\\//_____\\/\\\\\\/////////____\\/\\\\\\/////////\\\\\\_____\\/\\\\\\_____\\/\\\\\\\\//\\\\\\\\/\\\\\\_    \n     _\\/\\\\\\_________________/\\\\\\//________\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\_\\//\\\\\\/\\\\\\_   \n      _\\/\\\\\\_______________/\\\\\\/___________\\/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\__\\//\\\\\\\\\\\\_  \n       _\\/\\\\\\______________/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\_____________\\/\\\\\\\\\\\\\\\\\\\\\\\\\\/___/\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\___\\//\\\\\\\\\\_ \n        _\\///______________\\///////////////__\\///______________\\/////////////____\\///////////__\\///_____\\/////__\n\n\n```\nA pastebin based on IPFS. It is a 100% static website running on JavaScript and HTML.\n\nBasically:\n1. You create a paste\n2. You get the hash\n3. You pin it. The save modal give you instructions on how to pin it.\n\nTo be added: \n- A simple button to pin directly to [Pinata](https://pinata.cloud) with it's API.\n\nNotes: \n- You kind of need to know IPFS to use this lol. https://ipfs.io/\n- I had to change the name because there is also another IPFSbin.\n\n\nFeatures:\n- It requires no server storage.\n \nThanks:\n- @youngchief_btw for the HTTP to HTTPS redirect\n- @khalby786 for the PWA\n\n\n### How To selfhost:\n1. Download the latest version: [https://github.com/owner/repository/releases/latest/download/](https://github.com/owner/repository/releases/latest/download/)\n2. Unzip it.\n3. Then, add it using this command.\n```\nipfs add -r p2pbin/\n```\nProject URL: [https://p2pbin.glitch.me/](https://p2pbin.glitch.me/)\nGitHub: [https://github.com/aboutDavid/p2pbin](https://github.com/aboutDavid/p2pbin)\n\nP2Pbin by aboutDavid is licensed under CC BY-SA 4.0. To view a copy of this license, visit https://creativecommons.org/licenses/by-sa/4.0"},{"title":"writepad","description":"Your very own basic web page, ready for you to customize.","url":"https://writepad.glitch.me","readme":"Welcome to Glitch\n=================\n\nClick `Show` in the header to see your app live. Updates to your code will instantly deploy and update live.\n\n**Glitch** is the friendly community where you'll build the app of your dreams. Glitch lets you instantly create, remix, edit, and host an app, bot or site, and you can invite collaborators or helpers to simultaneously edit code with you.\n\nFind out more [about Glitch](https://glitch.com/about).\n\n\nYour Project\n------------\n\n### ← README.md\n\nThat's this file, where you can tell people what your cool website does and how you built it.\n\n### ← index.html\n\nWhere you'll write the content of your website. \n\n### ← style.css\n\nCSS files add styling rules to your content.\n\n### ← script.js\n\nIf you're feeling fancy you can add interactivity to your site with JavaScript.\n\n### ← assets\n\nDrag in `assets`, like images or music, to add them to your project\n\nMade by [Glitch](https://glitch.com/)\n-------------------\n\n\\ ゜o゜)ノ\n"},{"title":"xn--11ty-4s83c","description":"A simple Node app built on Express, instantly up and running.","url":"https://xn--11ty-4s83c.glitch.me","readme":"# rocket11ty\n***\n[![Netlify Status](https://api.netlify.com/api/v1/badges/c0521ca1-b532-44c0-b265-d4531b676f98/deploy-status)](https://app.netlify.com/sites/rocket11ty/deploys)\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/aboutDavid/rocket11ty)\n[![remix this](https://cdn.glitch.com/2bdfb3f8-05ef-4035-a06e-2043962a3a13%2Fremix%402x.png?1513093958726)](https://glitch.com/edit/?utm_content=project_xn--11ty-4s83c&utm_source=remix_this&utm_medium=button&utm_campaign=glitchButton#!/remix/xn--11ty-4s83c)\nWelcome to Rocket11ty, a very simple yet elegant 11ty template.\n\nFeatures: \n- Automatic caching (Credit: @khalby786) \n- PWAs so your blog can be installed like an app (Credit: @khalby786) \n- Mobile Friendly design\n- Light and Dark theme. (Provided by <a href=\"https://www.gethalfmoon.com/\">Halfmoon.</a>)\n- A contact form that works (Only on Netlify, however can be make to work with [Pageclip](https://pageclip.co/))\n- An automatic SEO (a sitemap, RSS feed, etc)\n- NetlifyCMS to easily publish your blog (only on Netlify)\n- Made with the JAMstack idea so your blog can easily be published to a CDN (e.g. Netlify) unlike WordPress.\n\nSome parts of this blog (e.g. the blog system, the sitemap, and the RSS feed) came from [11ty's base template](https://github.com/11ty/eleventy-base-blog) because why remake something that is already good?\n\nProject URL: https://xn--11ty-4s83c.glitch.me/\nGitHub URL: https://github.com/aboutDavid/rocket11ty\n\n## Setup:\n\n```\nwebpack\n```\n\n## Run\n```\nnpm start\n```"},{"title":"fwp","description":"Fast Web Pages. Create your own website with zero coding skills that loads in milliseconds.","url":"https://fwp.glitch.me","readme":"# FWP: Fast Web Pages\n\nfwp allows people to create their own websites by writing text.\nIt's meant to be a open-source recreation of [txti](https://txti.es) with many improvements.\n\n## Installation\n\nOn Glitch:\n\n- Remix this project. You're done.\n\nOn a Linux PC:\n\n- Install Node.js and npm.\n- Remix this project.\n- Go to Tools -> Import and Export -> Download Project.\n- Extract the `tgz` file you've just downloaded.\n- Install the dependencies by typing `npm i` in the terminal.\n- Run the app by executing `npm start`.\n\n## Where is my data stored?\n\nThe SQLite database is stored in a hidden directory called `.data`.\nIf your fwp instance is located in `/app/fwp/`, the data directory will be found at `/app/fwp/.data/`.\n\n## Backups\n\nAll you need to backup your instance is copy a file called `db.sqlite` located in the data directory.\nWhen restoring your instance, just copy the file back to where it originally was located."},{"title":"honeypot","description":"A simple Node app built on Express, instantly up and running.","url":"https://honeypot.glitch.me","readme":"# 🍯 honeypot\n***\n\n### What is a honeypot:\n> In computer terminology, a honeypot is a computer security mechanism set to detect, deflect, or, in some manner, counteract attempts at unauthorized use of information systems. Generally, a honeypot consists of data (for example, in a network site) that appears to be a legitimate part of the site that seems to contain information or a resource of value to attackers, but actually, is isolated and monitored and enables blocking or analyzing the attackers. This is similar to police sting operations, colloquially known as \"baiting\" a suspect.\n\n\\- Wikipedia\n\n### Why set up a honeypot:\nMany bad bots will try to attack/DDoS your site. Those same bots will also go to other sites. So, with this honeypot, you can help other people by warning them.\n\n### How to set it up:\n1. Remix the project [here.](https://glitch.com/edit/#!/remix/honeypot),\n2. Get a [AbuseIPDB](https://www.abuseipdb.com/account/api) API key here.\n3. Place the AbuseIPDB key in the .env file under `ABUSEIPDB_API_KEY`. It looks like this: `ABUSEIPDB_API_KEY=<PLACE API KEY HERE>`\n\n### How to add more traps:\nAll traps are stored in `routes.js`. A normal entry looks something like:\n```jsx\n\"/path/to/trap\": [\"15,19\",\"A normal description.\"]\n```\nIf you visit PROJECT_NAME.glitch.me/path/to/trap, then you would be reported for \"A normal description.\" with the tags 'Hacking' and 'Bad web bot'\nThis explains more:\n```jsx\n\"/trap\": [\"category,category\", \"Description\"]\n```\n- \"/trap\": The path to the trap (website.com/trap)\n- \"category,category\": are the nubers assoicated with categories of attacks. Can be found [here](https://www.abuseipdb.com/categories)\n- \"Description\": The description of the attack"},{"title":"hello-markdown","description":"Server-side markdown renderer, using hello-webpage","url":"https://hello-markdown.glitch.me","readme":"# hello-markdown\n\nServer-side markdown renderer, using hello-webpage\n\n### 🤷‍♂️ How does it work?\n\nhello-webpage templates use something called lws (local web server) to serve static files (e.g. stylesheets, html files, javascript files, images, basically anything that does not need to be rendered by a server).\nlws also allows you to configure the webserver (like setting up a username/password, setting up logs, etc) using a javascript file. The way you can config lws to fit your needs.\nYou can also \"trick\" lws into running code that is not configuration (like rendering markdown, getting posts from GhostCMS, etc)\n\n### ⚙ How does it render markdown/save it?\n\n[markdown-it](https://github.com/markdown-it/markdown-it) renders the markdown and [fs (file system)](https://nodejs.org/api/fs.html) saves it.\n\n### 🎨 What stylesheet does this use?\n\n[github-markdown-css](https://github.com/sindresorhus/github-markdown-css)\n\n### ⏱️ Can I use this to keep my app on 24/7?\n\nNo. As wh0 pointed out, Glitch will initially use lws to serve the files, then move it to S3 (apparently) which is why some static sites go to sleep.\n\n### 💻 How do I get started?\n\n1. [Remix this project](https://glitch.com/edit/#!/remix/hello-markdown)\n2. Make some pages (markdown is obviously supported, they must end with .md). If you make a page called `contact.md`, the path would be `/contact`.\n3. Run `refresh`. You have to run `refresh` to refresh lws because since hello-webpage is a static site, Glitch does monitor/reload lws.\n\n### 👩‍🎨 How do I customize the layout?\n\nThe layout is stored in `layout.html`. The main content can be access by using the keyword: `{{ content }}` (sort of like nunjucks)\n\n### 👀 Examples\n\n- [This website](#)\n\n- [Markdown Cheetsheet](/example)\n\n### 💎 **NEW!** Blogging feature.\nPlace your posts in the `posts` folder with the following format:\n```text\n[YYYY]-[MM]-[DD]-[TITLE].md\n```\nYour post archive can be found at `/posts`. [Example of the posts archive.](https://hello-markdown.glitch.me/posts)"},{"title":"awesomenotebook","description":"A simple Node app built on Express, instantly up and running.","url":"https://awesomenotebook.glitch.me","readme":"# hello-express\n\nA server that serves a webpage, its resources, and some data\n\n\n## Your Project\n\nOn the front-end,\n\n- Edit `views/index.html` to change the content of the webpage\n- `public/client.js` is the javacript that runs when you load the webpage\n- `public/style.css` is the styles for `views/index.html`\n- Drag in `assets`, like images or music, to add them to your project\n\nOn the back-end,\n\n- your app starts at `server.js`\n- add frameworks and packages in `package.json`\n- safely store app secrets in `.env` (nobody can see this but you and people you invite)\n\nClick `Show` in the header to see your app live. Updates to your code will instantly deploy.\n\n\n## Made by [Glitch](https://glitch.com/)\n\n**Glitch** is the friendly community where you'll build the app of your dreams. Glitch lets you instantly create, remix, edit, and host an app, bot or site, and you can invite collaborators or helpers to simultaneously edit code with you.\n\nFind out more [about Glitch](https://glitch.com/about).\n\n( ᵔ ᴥ ᵔ )"}]